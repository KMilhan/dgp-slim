"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019-2021 Toyota Research Institute.  All rights reserved.
Definitions for annotation types for images and point clouds
"""

import builtins
import collections.abc
import dgp.proto.geometry_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AnnotationType:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AnnotationTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AnnotationType.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    BOUNDING_BOX_2D: _AnnotationType.ValueType  # 0
    """2D bounding box annotations on the image
    bounding_box_2d
    """
    BOUNDING_BOX_3D: _AnnotationType.ValueType  # 1
    """3D bounding box annotations on the image or point cloud.

    Note: Typically, the annotations are provided in the point cloud
    reference frame, and optionally also added as annotations
    in the camera's reference frame.
    bounding_box_3d
    """
    SEMANTIC_SEGMENTATION_2D: _AnnotationType.ValueType  # 2
    """Semantic segmentation on the image.
    semantic_segmentation_2d
    """
    SEMANTIC_SEGMENTATION_3D: _AnnotationType.ValueType  # 3
    """Semantic segmentation on the point cloud.
    semantic_segmentation_3d
    """
    INSTANCE_SEGMENTATION_2D: _AnnotationType.ValueType  # 4
    """Instance segmentation on the image.
    instance_segmentation_2d
    """
    INSTANCE_SEGMENTATION_3D: _AnnotationType.ValueType  # 5
    """Instance segmentation on the point cloud.
    instance_segmentation_3d
    """
    DEPTH: _AnnotationType.ValueType  # 6
    """Depth map on image.
    depth
    """
    SURFACE_NORMALS_2D: _AnnotationType.ValueType  # 13
    """3D Surface normals on the image.
    surface_normals_2d
    """
    SURFACE_NORMALS_3D: _AnnotationType.ValueType  # 7
    """3D Surface normals on the point cloud.
    surface_normals_3d
    """
    MOTION_VECTORS_2D: _AnnotationType.ValueType  # 8
    """2D Motion vectors on the image.
    (i.e. 2D optical flow)
    motion_vectors_2d
    """
    MOTION_VECTORS_3D: _AnnotationType.ValueType  # 9
    """3D Motion vectors on the point cloud.
    (i.e. 3D flow on the point cloud)
    motion_vectors_2d
    """
    KEY_POINT_2D: _AnnotationType.ValueType  # 10
    """2D Key Point on the image.
    key_point_2d
    """
    KEY_LINE_2D: _AnnotationType.ValueType  # 11
    """2D Key Line on the image.
    key_line_2d
    """
    POLYGON_2D: _AnnotationType.ValueType  # 12
    """2D Polygon on the image.
    polygon_2d
    """
    AGENT_BEHAVIOR: _AnnotationType.ValueType  # 14
    """Agent behavior
    agent_behavior
    """
    CLASSIFICATION: _AnnotationType.ValueType  # 15
    """Classification.
    (i.e. imagenet classification label)
    classification
    """
    KEY_POINT_3D: _AnnotationType.ValueType  # 16
    """3D Key Point in sensor space
    key_point_3d
    """
    KEY_LINE_3D: _AnnotationType.ValueType  # 17
    """3D Key Line in sensor space
    key_line_3d
    """
    POLYGON_3D: _AnnotationType.ValueType  # 18
    """3D Polygon in sensor space
    polygon_3d
    """

class AnnotationType(_AnnotationType, metaclass=_AnnotationTypeEnumTypeWrapper):
    """Generic Annotation Enumeration.
    Annotations will be available under the corresponding enum name.

    The annotation files will reside under the corresponding directory
    names specified in the comments on the right.

    For e.g., BOUNDING_BOX_2D annotations reside under
    bounding_box_2d/*.json
    """

BOUNDING_BOX_2D: AnnotationType.ValueType  # 0
"""2D bounding box annotations on the image
bounding_box_2d
"""
BOUNDING_BOX_3D: AnnotationType.ValueType  # 1
"""3D bounding box annotations on the image or point cloud.

Note: Typically, the annotations are provided in the point cloud
reference frame, and optionally also added as annotations
in the camera's reference frame.
bounding_box_3d
"""
SEMANTIC_SEGMENTATION_2D: AnnotationType.ValueType  # 2
"""Semantic segmentation on the image.
semantic_segmentation_2d
"""
SEMANTIC_SEGMENTATION_3D: AnnotationType.ValueType  # 3
"""Semantic segmentation on the point cloud.
semantic_segmentation_3d
"""
INSTANCE_SEGMENTATION_2D: AnnotationType.ValueType  # 4
"""Instance segmentation on the image.
instance_segmentation_2d
"""
INSTANCE_SEGMENTATION_3D: AnnotationType.ValueType  # 5
"""Instance segmentation on the point cloud.
instance_segmentation_3d
"""
DEPTH: AnnotationType.ValueType  # 6
"""Depth map on image.
depth
"""
SURFACE_NORMALS_2D: AnnotationType.ValueType  # 13
"""3D Surface normals on the image.
surface_normals_2d
"""
SURFACE_NORMALS_3D: AnnotationType.ValueType  # 7
"""3D Surface normals on the point cloud.
surface_normals_3d
"""
MOTION_VECTORS_2D: AnnotationType.ValueType  # 8
"""2D Motion vectors on the image.
(i.e. 2D optical flow)
motion_vectors_2d
"""
MOTION_VECTORS_3D: AnnotationType.ValueType  # 9
"""3D Motion vectors on the point cloud.
(i.e. 3D flow on the point cloud)
motion_vectors_2d
"""
KEY_POINT_2D: AnnotationType.ValueType  # 10
"""2D Key Point on the image.
key_point_2d
"""
KEY_LINE_2D: AnnotationType.ValueType  # 11
"""2D Key Line on the image.
key_line_2d
"""
POLYGON_2D: AnnotationType.ValueType  # 12
"""2D Polygon on the image.
polygon_2d
"""
AGENT_BEHAVIOR: AnnotationType.ValueType  # 14
"""Agent behavior
agent_behavior
"""
CLASSIFICATION: AnnotationType.ValueType  # 15
"""Classification.
(i.e. imagenet classification label)
classification
"""
KEY_POINT_3D: AnnotationType.ValueType  # 16
"""3D Key Point in sensor space
key_point_3d
"""
KEY_LINE_3D: AnnotationType.ValueType  # 17
"""3D Key Line in sensor space
key_line_3d
"""
POLYGON_3D: AnnotationType.ValueType  # 18
"""3D Polygon in sensor space
polygon_3d
"""
global___AnnotationType = AnnotationType

@typing.final
class BoundingBox2D(google.protobuf.message.Message):
    """2D bounding box"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    W_FIELD_NUMBER: builtins.int
    H_FIELD_NUMBER: builtins.int
    x: builtins.int
    """(x, y) is top left corner (in absolute pixel coordinates)"""
    y: builtins.int
    w: builtins.int
    """(w, h) is width and height (in absolute pixel coordinates)"""
    h: builtins.int
    def __init__(
        self,
        *,
        x: builtins.int = ...,
        y: builtins.int = ...,
        w: builtins.int = ...,
        h: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["h", b"h", "w", b"w", "x", b"x", "y", b"y"]) -> None: ...

global___BoundingBox2D = BoundingBox2D

@typing.final
class BoundingBox2DAnnotation(google.protobuf.message.Message):
    """2D bounding box annotation for a single instance."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    BOX_FIELD_NUMBER: builtins.int
    AREA_FIELD_NUMBER: builtins.int
    ISCROWD_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1])
    For datasets supporting semantic segmentation and detection,
    num_classes corresponds to the number of segmentation classes.
    For datasets only supporting detection, this is the number of
    thing classes.
    """
    area: builtins.int
    """Other fields useful for downstream metric computation."""
    iscrowd: builtins.bool
    """Refer to crowd box in coco dataset."""
    instance_id: builtins.int
    """Instance identifier"""
    @property
    def box(self) -> global___BoundingBox2D:
        """2D box"""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values.
        This can be used to stored `agent_behavior` states (i.e., parked car,
        pedestrian intent).
        """

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        box: global___BoundingBox2D | None = ...,
        area: builtins.int = ...,
        iscrowd: builtins.bool = ...,
        instance_id: builtins.int = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["box", b"box"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["area", b"area", "attributes", b"attributes", "box", b"box", "class_id", b"class_id", "instance_id", b"instance_id", "iscrowd", b"iscrowd"]) -> None: ...

global___BoundingBox2DAnnotation = BoundingBox2DAnnotation

@typing.final
class BoundingBox3D(google.protobuf.message.Message):
    """3D bounding box
    3D Bounding box. Produced by first constructing a box of dimensions
    width, length, height centered at the origin, then rotating it by the
    specified quaternion and finally translating the box to the center
    coordinate.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    POSE_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    LENGTH_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    OCCLUSION_FIELD_NUMBER: builtins.int
    TRUNCATION_FIELD_NUMBER: builtins.int
    width: builtins.float
    """Dimensions of box."""
    length: builtins.float
    height: builtins.float
    occlusion: builtins.int
    """Integer (0,1,2,3) indicating occlusion state:
    0 = fully visible, 1 = partly occluded
    2 = largely occluded, 3 = unknown
    """
    truncation: builtins.float
    """From 0 (non-truncated) to 1 (truncated), where
    truncated refers to the object leaving image boundaries.
    """
    @property
    def pose(self) -> dgp.proto.geometry_pb2.Pose:
        """6DoF pose of bounding 3D.
        (Translation is the center point of the box)
        """

    def __init__(
        self,
        *,
        pose: dgp.proto.geometry_pb2.Pose | None = ...,
        width: builtins.float = ...,
        length: builtins.float = ...,
        height: builtins.float = ...,
        occlusion: builtins.int = ...,
        truncation: builtins.float = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pose", b"pose"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["height", b"height", "length", b"length", "occlusion", b"occlusion", "pose", b"pose", "truncation", b"truncation", "width", b"width"]) -> None: ...

global___BoundingBox3D = BoundingBox3D

@typing.final
class BoundingBox3DAnnotation(google.protobuf.message.Message):
    """3D bounding box annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    BOX_FIELD_NUMBER: builtins.int
    INSTANCE_ID_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    NUM_POINTS_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier. Should be in range [0, num_classes - 1],
    where num_classes is the total number of classes in your ontology.
    """
    instance_id: builtins.int
    """Instance identifier for this annotation.
    This needs to be unique to a scene.
    """
    num_points: builtins.int
    """Number of LIDAR points in the Bounding Box"""
    @property
    def box(self) -> global___BoundingBox3D:
        """3D box."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values."""

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        box: global___BoundingBox3D | None = ...,
        instance_id: builtins.int = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        num_points: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["box", b"box"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "box", b"box", "class_id", b"class_id", "instance_id", b"instance_id", "num_points", b"num_points"]) -> None: ...

global___BoundingBox3DAnnotation = BoundingBox3DAnnotation

@typing.final
class KeyPoint2D(google.protobuf.message.Message):
    """2D point."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.int
    """(x, y) point (in absolute pixel coordinates)."""
    y: builtins.int
    def __init__(
        self,
        *,
        x: builtins.int = ...,
        y: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y"]) -> None: ...

global___KeyPoint2D = KeyPoint2D

@typing.final
class KeyPoint2DAnnotation(google.protobuf.message.Message):
    """2D point annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    POINT_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    key: builtins.str
    """An identifier key. Used to link with other annotations
    (example: BoundingBox2D) which specify this key in their
    instance to link to corresponding KeyPoint2DAnnotation.
    """
    @property
    def point(self) -> global___KeyPoint2D:
        """2D point."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values."""

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        point: global___KeyPoint2D | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["point", b"point"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "key", b"key", "point", b"point"]) -> None: ...

global___KeyPoint2DAnnotation = KeyPoint2DAnnotation

@typing.final
class KeyLine2DAnnotation(google.protobuf.message.Message):
    """2D line annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    VERTICES_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    key: builtins.str
    """An identifier key. Used to link with other annotations, which specify
    this key in their instance to link to corresponding KeyLine2DAnnotation.
    """
    @property
    def vertices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyPoint2D]:
        """2D line."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values.
        Add only key/value pairs that are stored in a project document accessible
        to project contributors.
        """

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        vertices: collections.abc.Iterable[global___KeyPoint2D] | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "key", b"key", "vertices", b"vertices"]) -> None: ...

global___KeyLine2DAnnotation = KeyLine2DAnnotation

@typing.final
class PolygonPoint2D(google.protobuf.message.Message):
    """2D point for polygon annotation which allows negative coordinate for
    truncated rotated bounding box at the edge of an image because this kind of
    negative coordinate is meaningful.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    x: builtins.int
    """(x, y) point (in absolute pixel coordinates)."""
    y: builtins.int
    def __init__(
        self,
        *,
        x: builtins.int = ...,
        y: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y"]) -> None: ...

global___PolygonPoint2D = PolygonPoint2D

@typing.final
class Polygon2DAnnotation(google.protobuf.message.Message):
    """2D polygon annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    VERTICES_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    @property
    def vertices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PolygonPoint2D]:
        """2D polygon.
        Points should be put into this field with counter-clockwise order.
        """

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values."""

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        vertices: collections.abc.Iterable[global___PolygonPoint2D] | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "vertices", b"vertices"]) -> None: ...

global___Polygon2DAnnotation = Polygon2DAnnotation

@typing.final
class ClassificationAnnotation(google.protobuf.message.Message):
    """Classification annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values."""

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id"]) -> None: ...

global___ClassificationAnnotation = ClassificationAnnotation

@typing.final
class KeyPoint3D(google.protobuf.message.Message):
    """3D point."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """(x, y, z) point (in 3D Cartesian coordinates)."""
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___KeyPoint3D = KeyPoint3D

@typing.final
class KeyPoint3DAnnotation(google.protobuf.message.Message):
    """3D point annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    POINT_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    key: builtins.str
    """An identifier key. Used to link with other annotations, which specify
    this key in their instance to link to corresponding KeyPoint3DAnnotation.
    """
    @property
    def point(self) -> global___KeyPoint3D:
        """3D point."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values.
        Add only key/value pairs that are stored in a project document accessible
        to project contributors.
        """

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        point: global___KeyPoint3D | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["point", b"point"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "key", b"key", "point", b"point"]) -> None: ...

global___KeyPoint3DAnnotation = KeyPoint3DAnnotation

@typing.final
class KeyLine3DAnnotation(google.protobuf.message.Message):
    """3D line annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    VERTICES_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    key: builtins.str
    """An identifier key. Used to link with other annotations, which specify
    this key in their instance to link to corresponding KeyLine3DAnnotation.
    """
    @property
    def vertices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyPoint3D]:
        """3D line."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values.
        Add only key/value pairs that are stored in a project document accessible
        to project contributors.
        """

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        vertices: collections.abc.Iterable[global___KeyPoint3D] | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        key: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "key", b"key", "vertices", b"vertices"]) -> None: ...

global___KeyLine3DAnnotation = KeyLine3DAnnotation

@typing.final
class PolygonPoint3D(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """(x, y, z) point (in 3D Cartesian coordinates)."""
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___PolygonPoint3D = PolygonPoint3D

@typing.final
class Polygon3DAnnotation(google.protobuf.message.Message):
    """3D polygon annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    VERTICES_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    @property
    def vertices(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PolygonPoint3D]:
        """3D polygon.
        Points should be put into this field with counter-clockwise order.
        """

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values.
        Add only key/value pairs that are stored in a project document accessible
        to project contributors.
        """

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        vertices: collections.abc.Iterable[global___PolygonPoint3D] | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "vertices", b"vertices"]) -> None: ...

global___Polygon3DAnnotation = Polygon3DAnnotation

@typing.final
class SemanticSegmentationPoint3D(google.protobuf.message.Message):
    """3D point."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """(x, y, z) point (in 3D Cartesian coordinates)."""
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___SemanticSegmentationPoint3D = SemanticSegmentationPoint3D

@typing.final
class SemanticSegmentation3DAnnotation(google.protobuf.message.Message):
    """Semantic segmentation 3D annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    CLASS_ID_FIELD_NUMBER: builtins.int
    POINT_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    POINT_INDEX_FIELD_NUMBER: builtins.int
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    point_index: builtins.int
    """Reference to the index of the original point in datum point cloud."""
    @property
    def point(self) -> global___SemanticSegmentationPoint3D:
        """3D point."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values."""

    def __init__(
        self,
        *,
        class_id: builtins.int = ...,
        point: global___SemanticSegmentationPoint3D | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        point_index: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["point", b"point"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "point", b"point", "point_index", b"point_index"]) -> None: ...

global___SemanticSegmentation3DAnnotation = SemanticSegmentation3DAnnotation

@typing.final
class InstanceSegmentationPoint3D(google.protobuf.message.Message):
    """3D point."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    X_FIELD_NUMBER: builtins.int
    Y_FIELD_NUMBER: builtins.int
    Z_FIELD_NUMBER: builtins.int
    x: builtins.float
    """(x, y, z) point (in 3D Cartesian coordinates)."""
    y: builtins.float
    z: builtins.float
    def __init__(
        self,
        *,
        x: builtins.float = ...,
        y: builtins.float = ...,
        z: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["x", b"x", "y", b"y", "z", b"z"]) -> None: ...

global___InstanceSegmentationPoint3D = InstanceSegmentationPoint3D

@typing.final
class InstanceSegmentation3DAnnotation(google.protobuf.message.Message):
    """Instance segmentation 3D annotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AttributesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    INSTANCE_ID_FIELD_NUMBER: builtins.int
    CLASS_ID_FIELD_NUMBER: builtins.int
    POINT_FIELD_NUMBER: builtins.int
    ATTRIBUTES_FIELD_NUMBER: builtins.int
    POINT_INDEX_FIELD_NUMBER: builtins.int
    instance_id: builtins.int
    """Instance identifier (should be in [0, num_instances - 1]),
    where num_instances is the total number of instances in your
    point cloud.
    """
    class_id: builtins.int
    """Class identifier (should be in [0, num_classes - 1]),
    where num_classes is the total number of classes in your ontology.
    """
    point_index: builtins.int
    """Reference to the index of the original point in datum point cloud."""
    @property
    def point(self) -> global___InstanceSegmentationPoint3D:
        """3D point."""

    @property
    def attributes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A map of attribute names to their values."""

    def __init__(
        self,
        *,
        instance_id: builtins.int = ...,
        class_id: builtins.int = ...,
        point: global___InstanceSegmentationPoint3D | None = ...,
        attributes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        point_index: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["point", b"point"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["attributes", b"attributes", "class_id", b"class_id", "instance_id", b"instance_id", "point", b"point", "point_index", b"point_index"]) -> None: ...

global___InstanceSegmentation3DAnnotation = InstanceSegmentation3DAnnotation

@typing.final
class BoundingBox2DAnnotations(google.protobuf.message.Message):
    """List of BoundingBox2DAnnotation"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BoundingBox2DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___BoundingBox2DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___BoundingBox2DAnnotations = BoundingBox2DAnnotations

@typing.final
class BoundingBox3DAnnotations(google.protobuf.message.Message):
    """List of BoundingBox3DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___BoundingBox3DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___BoundingBox3DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___BoundingBox3DAnnotations = BoundingBox3DAnnotations

@typing.final
class KeyPoint2DAnnotations(google.protobuf.message.Message):
    """List of KeyPoint2DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyPoint2DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___KeyPoint2DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___KeyPoint2DAnnotations = KeyPoint2DAnnotations

@typing.final
class KeyLine2DAnnotations(google.protobuf.message.Message):
    """List of KeyLine2DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyLine2DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___KeyLine2DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___KeyLine2DAnnotations = KeyLine2DAnnotations

@typing.final
class Polygon2DAnnotations(google.protobuf.message.Message):
    """List of Polygon2DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Polygon2DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___Polygon2DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___Polygon2DAnnotations = Polygon2DAnnotations

@typing.final
class ClassificationAnnotations(google.protobuf.message.Message):
    """List of ClassificationAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ClassificationAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___ClassificationAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___ClassificationAnnotations = ClassificationAnnotations

@typing.final
class KeyPoint3DAnnotations(google.protobuf.message.Message):
    """List of KeyPoint3DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyPoint3DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___KeyPoint3DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___KeyPoint3DAnnotations = KeyPoint3DAnnotations

@typing.final
class KeyLine3DAnnotations(google.protobuf.message.Message):
    """List of KeyLine3DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___KeyLine3DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___KeyLine3DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___KeyLine3DAnnotations = KeyLine3DAnnotations

@typing.final
class Polygon3DAnnotations(google.protobuf.message.Message):
    """List of Polygon3DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Polygon3DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___Polygon3DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___Polygon3DAnnotations = Polygon3DAnnotations

@typing.final
class SemanticSegmentation3DAnnotations(google.protobuf.message.Message):
    """List of SemanticSegmentation3DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___SemanticSegmentation3DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___SemanticSegmentation3DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___SemanticSegmentation3DAnnotations = SemanticSegmentation3DAnnotations

@typing.final
class InstanceSegmentation3DAnnotations(google.protobuf.message.Message):
    """List of InstanceSegmentation3DAnnotation."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___InstanceSegmentation3DAnnotation]: ...
    def __init__(
        self,
        *,
        annotations: collections.abc.Iterable[global___InstanceSegmentation3DAnnotation] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations"]) -> None: ...

global___InstanceSegmentation3DAnnotations = InstanceSegmentation3DAnnotations
