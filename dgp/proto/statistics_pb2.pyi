"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Definitions for raw data statistics of a Dataset or a Scene."""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class DatasetStatistics(google.protobuf.message.Message):
    """Statistics for a dataset or a scene"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class ImageStatistics(google.protobuf.message.Message):
        """Statistics for Image dataset"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        COUNT_FIELD_NUMBER: builtins.int
        MEAN_FIELD_NUMBER: builtins.int
        STDDEV_FIELD_NUMBER: builtins.int
        count: builtins.int
        @property
        def mean(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        @property
        def stddev(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            count: builtins.int = ...,
            mean: collections.abc.Iterable[builtins.float] | None = ...,
            stddev: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["count", b"count", "mean", b"mean", "stddev", b"stddev"]) -> None: ...

    @typing.final
    class PointCloudStatistics(google.protobuf.message.Message):
        """Statistics for Point cloud dataset"""

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        COUNT_FIELD_NUMBER: builtins.int
        MEAN_FIELD_NUMBER: builtins.int
        STDDEV_FIELD_NUMBER: builtins.int
        count: builtins.int
        @property
        def mean(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        @property
        def stddev(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
        def __init__(
            self,
            *,
            count: builtins.int = ...,
            mean: collections.abc.Iterable[builtins.float] | None = ...,
            stddev: collections.abc.Iterable[builtins.float] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["count", b"count", "mean", b"mean", "stddev", b"stddev"]) -> None: ...

    IMAGE_STATISTICS_FIELD_NUMBER: builtins.int
    POINTCLOUD_STATISTICS_FIELD_NUMBER: builtins.int
    @property
    def image_statistics(self) -> global___DatasetStatistics.ImageStatistics:
        """Image and point cloud statistics"""

    @property
    def pointcloud_statistics(self) -> global___DatasetStatistics.PointCloudStatistics: ...
    def __init__(
        self,
        *,
        image_statistics: global___DatasetStatistics.ImageStatistics | None = ...,
        pointcloud_statistics: global___DatasetStatistics.PointCloudStatistics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["image_statistics", b"image_statistics", "pointcloud_statistics", b"pointcloud_statistics"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["image_statistics", b"image_statistics", "pointcloud_statistics", b"pointcloud_statistics"]) -> None: ...

global___DatasetStatistics = DatasetStatistics
