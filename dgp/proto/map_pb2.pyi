"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2021 Toyota Research Institute.  All rights reserved.
Definitions for Map and traffic control signals.
"""

import builtins
import collections.abc
import dgp.proto.geometry_pb2
import dgp.proto.identifiers_pb2
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class LaneDivider(google.protobuf.message.Message):
    """Basic container for line divider on road, contains sequence of points to form a polyline."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _LaneDividerType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LaneDividerTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LaneDivider._LaneDividerType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        TYPE_UNKNOWN: LaneDivider._LaneDividerType.ValueType  # 0
        TYPE_SINGLE_SOLID: LaneDivider._LaneDividerType.ValueType  # 1
        TYPE_SINGLE_DASHED: LaneDivider._LaneDividerType.ValueType  # 2
        TYPE_SINGLE_WHITE_DASHED: LaneDivider._LaneDividerType.ValueType  # 3
        TYPE_DOUBLE_SOLID: LaneDivider._LaneDividerType.ValueType  # 4
        TYPE_DOUBLE_DASHED: LaneDivider._LaneDividerType.ValueType  # 5
        TYPE_DOUBLE_SOLID_FAR_DASHED_NEAR: LaneDivider._LaneDividerType.ValueType  # 6
        TYPE_DOUBLE_DASHED_FAR_SOLID_NEAR: LaneDivider._LaneDividerType.ValueType  # 7
        TYPE_CURB: LaneDivider._LaneDividerType.ValueType  # 8

    class LaneDividerType(_LaneDividerType, metaclass=_LaneDividerTypeEnumTypeWrapper):
        """Enum of types of the LaneDivider."""

    TYPE_UNKNOWN: LaneDivider.LaneDividerType.ValueType  # 0
    TYPE_SINGLE_SOLID: LaneDivider.LaneDividerType.ValueType  # 1
    TYPE_SINGLE_DASHED: LaneDivider.LaneDividerType.ValueType  # 2
    TYPE_SINGLE_WHITE_DASHED: LaneDivider.LaneDividerType.ValueType  # 3
    TYPE_DOUBLE_SOLID: LaneDivider.LaneDividerType.ValueType  # 4
    TYPE_DOUBLE_DASHED: LaneDivider.LaneDividerType.ValueType  # 5
    TYPE_DOUBLE_SOLID_FAR_DASHED_NEAR: LaneDivider.LaneDividerType.ValueType  # 6
    TYPE_DOUBLE_DASHED_FAR_SOLID_NEAR: LaneDivider.LaneDividerType.ValueType  # 7
    TYPE_CURB: LaneDivider.LaneDividerType.ValueType  # 8

    class _LaneDividerColor:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LaneDividerColorEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LaneDivider._LaneDividerColor.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        COLOR_UNKNOWN: LaneDivider._LaneDividerColor.ValueType  # 0
        COLOR_YELLOW: LaneDivider._LaneDividerColor.ValueType  # 1
        COLOR_WHITE: LaneDivider._LaneDividerColor.ValueType  # 2
        COLOR_RED: LaneDivider._LaneDividerColor.ValueType  # 3

    class LaneDividerColor(_LaneDividerColor, metaclass=_LaneDividerColorEnumTypeWrapper):
        """Enum of color of the lane divider."""

    COLOR_UNKNOWN: LaneDivider.LaneDividerColor.ValueType  # 0
    COLOR_YELLOW: LaneDivider.LaneDividerColor.ValueType  # 1
    COLOR_WHITE: LaneDivider.LaneDividerColor.ValueType  # 2
    COLOR_RED: LaneDivider.LaneDividerColor.ValueType  # 3

    class _LaneDividerMaterial:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _LaneDividerMaterialEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[LaneDivider._LaneDividerMaterial.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        MATERIAL_UNKNOWN: LaneDivider._LaneDividerMaterial.ValueType  # 0
        MATERIAL_PAINT: LaneDivider._LaneDividerMaterial.ValueType  # 1

    class LaneDividerMaterial(_LaneDividerMaterial, metaclass=_LaneDividerMaterialEnumTypeWrapper):
        """Enum of material of the lane divider."""

    MATERIAL_UNKNOWN: LaneDivider.LaneDividerMaterial.ValueType  # 0
    MATERIAL_PAINT: LaneDivider.LaneDividerMaterial.ValueType  # 1

    WAY_POINTS_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COLOR_FIELD_NUMBER: builtins.int
    MATERIAL_FIELD_NUMBER: builtins.int
    type: global___LaneDivider.LaneDividerType.ValueType
    """Type of LaneDivider."""
    color: global___LaneDivider.LaneDividerColor.ValueType
    """Color of LaneDivider."""
    material: global___LaneDivider.LaneDividerMaterial.ValueType
    """Material of LaneDivider."""
    @property
    def way_points(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dgp.proto.geometry_pb2.Point3D]:
        """List of points to form a continuous line. The points are ordered along lane direction."""

    def __init__(
        self,
        *,
        way_points: collections.abc.Iterable[dgp.proto.geometry_pb2.Point3D] | None = ...,
        type: global___LaneDivider.LaneDividerType.ValueType = ...,
        color: global___LaneDivider.LaneDividerColor.ValueType = ...,
        material: global___LaneDivider.LaneDividerMaterial.ValueType = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["color", b"color", "material", b"material", "type", b"type", "way_points", b"way_points"]) -> None: ...

global___LaneDivider = LaneDivider

@typing.final
class Lane(google.protobuf.message.Message):
    """Defines lane information - centerline, boundaries, etc. A lane is defined as https://en.wikipedia.org/wiki/Lane."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    CENTER_LINE_FIELD_NUMBER: builtins.int
    LEFT_LANE_BOUNDARY_FIELD_NUMBER: builtins.int
    RIGHT_LANE_BOUNDARY_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Identifier for the lane."""
    @property
    def center_line(self) -> global___LaneDivider:
        """Center line of the lane. It is geometrically the centers between left and right lane boundaries."""

    @property
    def left_lane_boundary(self) -> global___LaneDivider:
        """Left lane boundary."""

    @property
    def right_lane_boundary(self) -> global___LaneDivider:
        """Right lane boundary."""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        center_line: global___LaneDivider | None = ...,
        left_lane_boundary: global___LaneDivider | None = ...,
        right_lane_boundary: global___LaneDivider | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["center_line", b"center_line", "left_lane_boundary", b"left_lane_boundary", "right_lane_boundary", b"right_lane_boundary"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["center_line", b"center_line", "id", b"id", "left_lane_boundary", b"left_lane_boundary", "right_lane_boundary", b"right_lane_boundary"]) -> None: ...

global___Lane = Lane

@typing.final
class Boundary(google.protobuf.message.Message):
    """The geometry of the edges of zone, represented as a chain of polylines to form a polygon.
    Each edge in a boundary is associated in iteration order, where the last waypoint of
    `explicit` edge n has an `implicit` connection to the first waypoint of `explicit` edge n+1,
    including wrapping from the last `explicit` edge to the first edge in a boundary.
    This means, when considering implicit edges, a boundary could be considered a closed polygon.
    A zone has potentially multiple boundaries, because there may be multiple discrete areas
    of interest in a single zone (e.g. an island in the middle of an intersection). Multiple boundaries
    in the same zone are fully independent from a data structure point of view.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EDGES_FIELD_NUMBER: builtins.int
    @property
    def edges(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LaneDivider]:
        """List of edges of boundary polygon."""

    def __init__(
        self,
        *,
        edges: collections.abc.Iterable[global___LaneDivider] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["edges", b"edges"]) -> None: ...

global___Boundary = Boundary

@typing.final
class Zone(google.protobuf.message.Message):
    """Defines zone information. A Zone consists of a list of boundaries, each boundary having a list of edges, where
    an edge is a 3D polyline, `explicit edges` are those actually in the list of polylines,
    and `implicit edges` are those that connect implicit edges with straight lines. Examples of zones are cross-walk
    intersection, etc.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    BOUNDARIES_FIELD_NUMBER: builtins.int
    id: builtins.str
    """Identifier for the zone."""
    type: builtins.str
    """Type of Zone, like cross-walk."""
    @property
    def boundaries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Boundary]:
        """List of Zone boundaries."""

    def __init__(
        self,
        *,
        id: builtins.str = ...,
        type: builtins.str = ...,
        boundaries: collections.abc.Iterable[global___Boundary] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["boundaries", b"boundaries", "id", b"id", "type", b"type"]) -> None: ...

global___Zone = Zone

@typing.final
class SceneMap(google.protobuf.message.Message):
    """Represents a map -- either discrete segments or a pointer to an external data object (e.g. for rasterized maps)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LANES_FIELD_NUMBER: builtins.int
    ZONES_FIELD_NUMBER: builtins.int
    TRANSFORMS_FIELD_NUMBER: builtins.int
    MAP_DATA_FIELD_NUMBER: builtins.int
    @property
    def lanes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Lane]:
        """List of Lanes in the SceneMap."""

    @property
    def zones(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Zone]:
        """List of zones, such as crosswalk regions, intersections."""

    @property
    def transforms(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___LocalEarthTransform]:
        """List transformations from earth coord to vehicle coord."""

    @property
    def map_data(self) -> google.protobuf.any_pb2.Any:
        """A general encoding of map information."""

    def __init__(
        self,
        *,
        lanes: collections.abc.Iterable[global___Lane] | None = ...,
        zones: collections.abc.Iterable[global___Zone] | None = ...,
        transforms: collections.abc.Iterable[global___LocalEarthTransform] | None = ...,
        map_data: google.protobuf.any_pb2.Any | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["map_data", b"map_data"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["lanes", b"lanes", "map_data", b"map_data", "transforms", b"transforms", "zones", b"zones"]) -> None: ...

global___SceneMap = SceneMap

@typing.final
class LocalEarthTransform(google.protobuf.message.Message):
    """Transform from a Earth-centered Earth-fixed coordinate to Local coordinate."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SAMPLE_ID_FIELD_NUMBER: builtins.int
    POSE_FIELD_NUMBER: builtins.int
    @property
    def sample_id(self) -> dgp.proto.identifiers_pb2.DatumId:
        """Unique sample identifier (See dgp.idenfiers.proto).
        Copy from sample ID to ensure one-one match between a localmapview and sample in a scene.
        """

    @property
    def pose(self) -> dgp.proto.geometry_pb2.Pose:
        """Pose of this sample in Earth-centered Earth-fixed coordinate system."""

    def __init__(
        self,
        *,
        sample_id: dgp.proto.identifiers_pb2.DatumId | None = ...,
        pose: dgp.proto.geometry_pb2.Pose | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pose", b"pose", "sample_id", b"sample_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["pose", b"pose", "sample_id", b"sample_id"]) -> None: ...

global___LocalEarthTransform = LocalEarthTransform
