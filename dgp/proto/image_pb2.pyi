"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019 Toyota Research Institute.  All rights reserved.
Definitions for image and image annotation.
"""

import builtins
import collections.abc
import dgp.proto.geometry_pb2
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class Image(google.protobuf.message.Message):
    """Basic image container for DGP"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.any_pb2.Any: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.any_pb2.Any | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    FILENAME_FIELD_NUMBER: builtins.int
    HEIGHT_FIELD_NUMBER: builtins.int
    WIDTH_FIELD_NUMBER: builtins.int
    CHANNELS_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    POSE_FIELD_NUMBER: builtins.int
    filename: builtins.str
    """Relative file path for the image
    Supported image formats: (png/jpg/jpeg)
    """
    height: builtins.int
    """Image shape"""
    width: builtins.int
    channels: builtins.int
    @property
    def annotations(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.str]:
        """Annotations for an Image
        Maps dgp.proto.AnnotationType (segmentation, instances) to the filename
        containing the image annotation.
        Supported image annotation formats: (png/json)
        """

    @property
    def metadata(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.any_pb2.Any]:
        """Optional metadata (i.e. miscellaneous enriched annotations)"""

    @property
    def pose(self) -> dgp.proto.geometry_pb2.Pose:
        """Ego-pose of this datum with respect to the first sample in the scene."""

    def __init__(
        self,
        *,
        filename: builtins.str = ...,
        height: builtins.int = ...,
        width: builtins.int = ...,
        channels: builtins.int = ...,
        annotations: collections.abc.Mapping[builtins.int, builtins.str] | None = ...,
        metadata: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ...,
        pose: dgp.proto.geometry_pb2.Pose | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["pose", b"pose"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations", "channels", b"channels", "filename", b"filename", "height", b"height", "metadata", b"metadata", "pose", b"pose", "width", b"width"]) -> None: ...

global___Image = Image
