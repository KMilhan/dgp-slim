"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019-2021 Toyota Research Institute.  All rights reserved.
Definitions for a sample within a dataset.
"""

import builtins
import collections.abc
import dgp.proto.file_datum_pb2
import dgp.proto.geometry_pb2
import dgp.proto.identifiers_pb2
import dgp.proto.image_pb2
import dgp.proto.point_cloud_pb2
import dgp.proto.radar_point_cloud_pb2
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class SampleCalibration(google.protobuf.message.Message):
    """Calibration for a sample"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAMES_FIELD_NUMBER: builtins.int
    INTRINSICS_FIELD_NUMBER: builtins.int
    EXTRINSICS_FIELD_NUMBER: builtins.int
    @property
    def names(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Sensor names for each of the corresponding datums"""

    @property
    def intrinsics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dgp.proto.geometry_pb2.CameraIntrinsics]:
        """Intrinsics of the corresponding datum"""

    @property
    def extrinsics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[dgp.proto.geometry_pb2.Pose]:
        """Extrinsincs of the corresponding datum with respect to the first datum
        [T_0, T_1, T_2] -> [T_0.inv() * T_0, T_0.inv() * T_1, T_0.inv() * T_2]
        """

    def __init__(
        self,
        *,
        names: collections.abc.Iterable[builtins.str] | None = ...,
        intrinsics: collections.abc.Iterable[dgp.proto.geometry_pb2.CameraIntrinsics] | None = ...,
        extrinsics: collections.abc.Iterable[dgp.proto.geometry_pb2.Pose] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["extrinsics", b"extrinsics", "intrinsics", b"intrinsics", "names", b"names"]) -> None: ...

global___SampleCalibration = SampleCalibration

@typing.final
class DatumValue(google.protobuf.message.Message):
    """DatumValue that takes one of many data type values"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_FIELD_NUMBER: builtins.int
    POINT_CLOUD_FIELD_NUMBER: builtins.int
    FILE_DATUM_FIELD_NUMBER: builtins.int
    RADAR_POINT_CLOUD_FIELD_NUMBER: builtins.int
    @property
    def image(self) -> dgp.proto.image_pb2.Image: ...
    @property
    def point_cloud(self) -> dgp.proto.point_cloud_pb2.PointCloud: ...
    @property
    def file_datum(self) -> dgp.proto.file_datum_pb2.FileDatum: ...
    @property
    def radar_point_cloud(self) -> dgp.proto.radar_point_cloud_pb2.RadarPointCloud: ...
    def __init__(
        self,
        *,
        image: dgp.proto.image_pb2.Image | None = ...,
        point_cloud: dgp.proto.point_cloud_pb2.PointCloud | None = ...,
        file_datum: dgp.proto.file_datum_pb2.FileDatum | None = ...,
        radar_point_cloud: dgp.proto.radar_point_cloud_pb2.RadarPointCloud | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["datum_oneof", b"datum_oneof", "file_datum", b"file_datum", "image", b"image", "point_cloud", b"point_cloud", "radar_point_cloud", b"radar_point_cloud"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["datum_oneof", b"datum_oneof", "file_datum", b"file_datum", "image", b"image", "point_cloud", b"point_cloud", "radar_point_cloud", b"radar_point_cloud"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["datum_oneof", b"datum_oneof"]) -> typing.Literal["image", "point_cloud", "file_datum", "radar_point_cloud"] | None: ...

global___DatumValue = DatumValue

@typing.final
class Datum(google.protobuf.message.Message):
    """Datum encapsulates a single data element and associated metadata to
    uniquely identify it in a series of logged data.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    DATUM_FIELD_NUMBER: builtins.int
    NEXT_KEY_FIELD_NUMBER: builtins.int
    PREV_KEY_FIELD_NUMBER: builtins.int
    key: builtins.str
    """Datum identifier key

    key = sha1(datum_id) = sha1(SerializeToString(DatumId(...))
    """
    next_key: builtins.str
    """Next datum hash key.
    The sha1 hash to the datum_id that follows this one.
    The hash corresponds to the hash of the DatumValue object.
    If empty, this datum is the last item in the linked list.
    """
    prev_key: builtins.str
    """Previous datum hash key.
    The datum hash to the datum_id that precedes this one.
    The hash corresponds to the hash of the DatumValue object.
    If empty, this datum is the first item in the linked list.
    """
    @property
    def id(self) -> dgp.proto.identifiers_pb2.DatumId:
        """Datum identifier
        Unique identifier to a datum in a specific log
        """

    @property
    def datum(self) -> global___DatumValue:
        """Datum envelope"""

    def __init__(
        self,
        *,
        id: dgp.proto.identifiers_pb2.DatumId | None = ...,
        key: builtins.str = ...,
        datum: global___DatumValue | None = ...,
        next_key: builtins.str = ...,
        prev_key: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["datum", b"datum", "id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["datum", b"datum", "id", b"id", "key", b"key", "next_key", b"next_key", "prev_key", b"prev_key"]) -> None: ...

global___Datum = Datum

@typing.final
class Sample(google.protobuf.message.Message):
    """Dataset sample that refers to data associated to a particular timestamp.

    A dataset sample is a container that encapsulates
    time-synchronized sensor data (images, point clouds, GPS/IMU etc),
    along with their associated annotations. Since sensor data are
    recorded in an asynchronous manner, the time-synchronization is
    assumed to be approximate. Samples within a scene are expected
    to have the same number of datums as their previous and next samples.
    In addition, we assume that the first sample in a scene will be the
    first datum in its chain (i.e. the datum(s) will all have
    prev_key set to null).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class MetadataEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> google.protobuf.any_pb2.Any: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: google.protobuf.any_pb2.Any | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    ID_FIELD_NUMBER: builtins.int
    DATUM_KEYS_FIELD_NUMBER: builtins.int
    CALIBRATION_KEY_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    calibration_key: builtins.str
    """Calibration identifier (sha1 of the calibration object)"""
    @property
    def id(self) -> dgp.proto.identifiers_pb2.DatumId:
        """Unique sample identifier (See dgp.idenfiers.proto)
        For samples, the "name" field is ignored.
        Typically, list of datum items in a sample are synchronized
        to the first item in the datum list.
        """

    @property
    def datum_keys(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """List of datum keys encapsulated in the sample"""

    @property
    def metadata(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, google.protobuf.any_pb2.Any]:
        """Sample-specific metadata
        Optional, miscellaneous enriched annotations
        """

    def __init__(
        self,
        *,
        id: dgp.proto.identifiers_pb2.DatumId | None = ...,
        datum_keys: collections.abc.Iterable[builtins.str] | None = ...,
        calibration_key: builtins.str = ...,
        metadata: collections.abc.Mapping[builtins.str, google.protobuf.any_pb2.Any] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["id", b"id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["calibration_key", b"calibration_key", "datum_keys", b"datum_keys", "id", b"id", "metadata", b"metadata"]) -> None: ...

global___Sample = Sample
