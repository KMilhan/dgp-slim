"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2020-2021 Toyota Research Institute.  All rights reserved.
Definition for an arbitrary annotated datum contained in a file.
"""

import builtins
import collections.abc
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class FileDatum(google.protobuf.message.Message):
    """Generic (datum, annotation) pair where the underlying
    content is stored externally in files.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class AnnotationsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___SelfDescribingFile: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___SelfDescribingFile | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    DATUM_FIELD_NUMBER: builtins.int
    ANNOTATIONS_FIELD_NUMBER: builtins.int
    @property
    def datum(self) -> global___SelfDescribingFile:
        """The file containing data (e.g. extracted features)"""

    @property
    def annotations(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___SelfDescribingFile]:
        """The file containing annotations for the above datum.
        Typically this field should not contain manual annotation data,
        since any data requiring large numbers of manual labels should
        have those labels described with an explicit (required) schema.
        The key integer is defined in annotations.proto's AnnotationType
        """

    def __init__(
        self,
        *,
        datum: global___SelfDescribingFile | None = ...,
        annotations: collections.abc.Mapping[builtins.int, global___SelfDescribingFile] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["datum", b"datum"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["annotations", b"annotations", "datum", b"datum"]) -> None: ...

global___FileDatum = FileDatum

@typing.final
class SelfDescribingFile(google.protobuf.message.Message):
    """Describes a file external to the serialized protobuf with an optional
    schema field that can be used to describe the file.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FILENAME_FIELD_NUMBER: builtins.int
    SCHEMA_FIELD_NUMBER: builtins.int
    filename: builtins.str
    """Relative file path (relative to the location where this scene description
    is stored. This datum is expected to obey the datum schema below, if supplied.
    """
    @property
    def schema(self) -> google.protobuf.any_pb2.Any:
        """An optional schema which describes the file at `filename`.

        Both the reader and the writer of this SelfDescribingFile need to have
        access to the datatype stored under `schema`, though for simple cases
        this may be a simple / integral type.
        """

    def __init__(
        self,
        *,
        filename: builtins.str = ...,
        schema: google.protobuf.any_pb2.Any | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["schema", b"schema"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["filename", b"filename", "schema", b"schema"]) -> None: ...

global___SelfDescribingFile = SelfDescribingFile
